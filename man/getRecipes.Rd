% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recipe.R
\name{getRecipes}
\alias{getRecipes}
\title{Getting Recipes}
\usage{
getRecipes(ingredients = c("chicken", "onions", "tomato", "green beans"),
  search = "", minNumIngred = 2)
}
\arguments{
\item{ingredients}{a list of ingredients, where each one is a string}

\item{search}{an optional string that indicates dish name.}

\item{minNumIngred}{a positive integer specifying the minimum number of ingredients from \code{ingredients}.
Note that this cannot exceed the number of ingredients provided.}
}
\value{
\code{getRecipes} returns a \code{data.frame}, which is in ascending order by the number of additional ingredients needed.
The \code{data.frame} has the following columns:
\itemize{
\item \code{recipe} is a column of strings containing the name of the recipe.

\item \code{link} is a column of string of the HTTP link to the complete recipe

\item \code{all.ingre} is a column of string of the full list of ingredients needed

\item \code{add.ingre} is a column of string of only the additional ingredients needed
(those not provided by the user)

\item \code{num} is a column of positive integer indicating the number of additional
ingredients needed
}
}
\description{
Given a list of ingredients, what kind of dish can one make? \code{getRecipes} is a function that
takes in a list of \code{k} ingredients, an optional dish name of interest, and a minimum number of ingredients \code{j}
to use from the provided list. Using the Recipe Puppy API, getRecipes returns the first 100
recipes that include at least \code{j} of the \code{k} ingredients, providing the user with a corresponding link and additional ingredients required
for each recipe.
}
\details{
\code{getRecipes} takes in user-inputted strings for ingredients and an optional search term
to provide a list 100 of recipes. There is also an option for the user to enter the minimum number
of ingredients from the provided list required for a recipe.

The function uses the Recipe Puppy API, and uses \code{\link[jsonlite]{fromJSON}} from the
\code{jsonlite} package to extract text. (An internet connection is required for this function to work.)

For example, in the default output, we are looking for any recipe that must contain at least 2
of the ingredients from the list of chicken, onions, tomato, and green beans. This contains
the 4 choose 2 combinations (chicken & onions, chicken & tomato, chicken & green beans, etc.)

To check these combinations, the function checks for the minimum number appearances over
all combinations if only 1 pairing of 2 is found in the recipe. This is \code{2*(k-1)}.
For example, with 4 ingredients, and 1 pairing of chicken & onions. Out of the  combinations
of all pairings, chicken and onions appears a total of 6 times, which is 2*(4-1)=2*3.

For users with less of an idea of what to cook, the function also accepts a single ingredient.
The minNumIngred value is set to 1, and the construction of combinations is ignored.

This function does not address recipes that comprise of only a single ingredient (as recipes
usually involve more than one ingredient).
}
\examples{
getRecipes(ingredients="beef")
getRecipes(ingredients=c("onions", "cheese", "garlic"), search="burger", minNumIngred=2)
getRecipes(ingredients=c("onions", "cheese", "green beans", "garlic", "tomato"), search="pasta", minNumIngred=2)

\dontrun{
getRecipes(ingredients=c(5, "pound turkey"))
}
}
\references{
\url{http://www.recipepuppy.com/about/api}

\url{http://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/index.html}

\url{http://r-pkgs.had.co.nz/}

\url{http://stackoverflow.com/questions/2098368/how-do-i-concatenate-a-vector-of-strings-character-in-r}

\url{http://stackoverflow.com/questions/12193779/how-to-write-trycatch-in-r}

\url{http://stackoverflow.com/questions/5076593/how-to-determine-if-you-have-an-internet-connection-in-r}
}
